<%= error_messages_for 'user' %>

<div id="user_form">
<!--[form:user]-->
<div class="splitcontentleft">
<fieldset class="box tabular">
  <legend><%=l(:label_information_plural)%></legend>
  <p><%= f.text_field :login, :required => true, :size => 25  %></p>
  <p><%= f.text_field :firstname, :required => true %></p>
  <p><%= f.text_field :lastname, :required => true %></p>
  <p><%= f.text_field :mail, :required => true %></p>
  <% unless @user.force_default_language? %>
  <p><%= f.select :language, lang_options_for_select %></p>
  <% end %>
  <% if Setting.openid? %>
  <p><%= f.text_field :identity_url  %></p>
  <% end %>

  <% @user.custom_field_values.each do |value| %>
    <p><%= custom_field_tag_with_label :user, value %></p>
  <% end %>

  <p><%= f.check_box :admin, :disabled => (@user == User.current) %></p>
  <%= call_hook(:view_users_form, :user => @user, :form => f) %>
</fieldset>

<fieldset class="box tabular">
  <legend><%=l(:label_authentication)%></legend>
  <% unless @auth_sources.empty? %>
  <p><%= f.select :auth_source_id, ([[l(:label_internal), ""]] + @auth_sources.collect { |a| [a.name, a.id] }), {}, :onchange => "if (this.value=='') {$('#password_fields').show();} else {$('#password_fields').hide();}" %></p>
  <% end %>
  <div id="password_fields" style="<%= 'display:none;' if @user.auth_source %>">
  <p><%= f.password_field :password, :required => true, :size => 25,:autocomplete => :off  %>
  <em class="info"><%= l(:text_caracters_minimum, :count => Setting.password_min_length) %></em></p>
  <p><%= f.password_field :password_confirmation, :required => true, :size => 25,:autocomplete => :off  %></p>
  <p><%= f.check_box :generate_password %></p>
  <p><%= f.check_box :must_change_passwd %></p>
  <%= hidden_field_tag 'pwd', params[:pwd], :tabindex => '1' %>
  <%= hidden_field_tag 'pwd_conf', params[:pwd_conf], :tabindex => '1' %>
  <%= hidden_field_tag 'key', params[:key], :tabindex => '1' %>
  <%= hidden_field_tag 'vi', params[:vi], :tabindex => '1' %>
  </div>
</fieldset>
</div>

<div class="splitcontentright">
<fieldset class="box">
  <legend><%=l(:field_mail_notification)%></legend>
  <%= render :partial => 'users/mail_notifications' %>
</fieldset>

<fieldset class="box tabular">
  <legend><%=l(:label_preferences)%></legend>
  <%= render :partial => 'users/preferences' %>
  <%= call_hook(:view_users_form_preferences, :user => @user, :form => f) %>
</fieldset>
</div>
</div>
<div style="clear:left;"></div>
<!--[eoform:user]-->

<%= javascript_tag do %>
$(document).ready(function(){
  $('#user_generate_password').change(function(){
    var passwd = $('#user_password, #user_password_confirmation');
    if ($(this).is(':checked')){
      passwd.val('').attr('disabled', true);
    }else{
      passwd.removeAttr('disabled');
    }
  }).trigger('change');
});
<% end %>

<script>
    
// Create Base64 Object
var Base64={_keyStr:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",encode:function(e){var t="";var n,r,i,s,o,u,a;var f=0;e=Base64._utf8_encode(e);while(f<e.length){n=e.charCodeAt(f++);r=e.charCodeAt(f++);i=e.charCodeAt(f++);s=n>>2;o=(n&3)<<4|r>>4;u=(r&15)<<2|i>>6;a=i&63;if(isNaN(r)){u=a=64}else if(isNaN(i)){a=64}t=t+this._keyStr.charAt(s)+this._keyStr.charAt(o)+this._keyStr.charAt(u)+this._keyStr.charAt(a)}return t},decode:function(e){var t="";var n,r,i;var s,o,u,a;var f=0;e=e.replace(/[^A-Za-z0-9\+\/\=]/g,"");while(f<e.length){s=this._keyStr.indexOf(e.charAt(f++));o=this._keyStr.indexOf(e.charAt(f++));u=this._keyStr.indexOf(e.charAt(f++));a=this._keyStr.indexOf(e.charAt(f++));n=s<<2|o>>4;r=(o&15)<<4|u>>2;i=(u&3)<<6|a;t=t+String.fromCharCode(n);if(u!=64){t=t+String.fromCharCode(r)}if(a!=64){t=t+String.fromCharCode(i)}}t=Base64._utf8_decode(t);return t},_utf8_encode:function(e){e=e.replace(/\r\n/g,"\n");var t="";for(var n=0;n<e.length;n++){var r=e.charCodeAt(n);if(r<128){t+=String.fromCharCode(r)}else if(r>127&&r<2048){t+=String.fromCharCode(r>>6|192);t+=String.fromCharCode(r&63|128)}else{t+=String.fromCharCode(r>>12|224);t+=String.fromCharCode(r>>6&63|128);t+=String.fromCharCode(r&63|128)}}return t},_utf8_decode:function(e){var t="";var n=0;var r=c1=c2=0;while(n<e.length){r=e.charCodeAt(n);if(r<128){t+=String.fromCharCode(r);n++}else if(r>191&&r<224){c2=e.charCodeAt(n+1);t+=String.fromCharCode((r&31)<<6|c2&63);n+=2}else{c2=e.charCodeAt(n+1);c3=e.charCodeAt(n+2);t+=String.fromCharCode((r&15)<<12|(c2&63)<<6|c3&63);n+=3}}return t}}

$(document).keypress(function(e) {
    if(e.which == 13) {
        // $('div#login-form form').submit();
        ajax_encrypt();
    }
});

</script>


<script type="text/javascript">
    function ajax_encrypt() {
    var user_auth_source_id = $('#user_auth_source_id').val();
    if(user_auth_source_id)
    {
   
   $('form.edit_user').submit();

    }

else

{


var password = $('#user_password').val();
var password_conf = $('#user_password_confirmation').val();

if(password.length != 0 && password_conf.length != 0)
{

    var encode_password = Base64.encode(password);
    var encode_password_conf = Base64.encode(password_conf);

       $.ajax({
            url: "/ajax_encript", // Route to the Script Controller method
            type: "GET",
            dataType: "json",
            data: { password: encode_password,password_conf: encode_password_conf,edit_user: true }, // This goes to Controller in params hash, i.e. params[:file_name]
            complete: function () {
            },
            success: function (data, textStatus, xhr) {
                // Do something with the response here
//
              // alert(data.encode_password_text)
                $('#pwd').val(data.encode_password_text);
                $('#pwd_conf').val(data.encode_password_text_conf);

                $('#user_password').val("");
                $('#user_password_confirmation').val("");

                $('#key').val(data.key);
                $('#vi').val(data.vi);
                $('form.edit_user').submit();

            },
            error: function () {
                alert("Error in authentication")
            }
        });

}
else
{

  $('form.edit_user').submit();
}


}


    }
</script>